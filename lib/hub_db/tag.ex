defmodule HubDB.Tag do
  @tags %{
    ajax: "Ajax",
    android: "Android",
    angular: "Angular",
    angularjs: "AngularJS",
    arrays: "Arrays",
    asp_dotnet: "ASP.NET",
    asp_dotnet_mvc: "ASP.NET MVC",
    bash: "Bash",
    c: "C",
    c_sharp: "C#",
    cpp: "C++",
    css: "CSS",
    database: "Database",
    django: "Django",
    dotnet: ".NET",
    eclipse: "Eclipse",
    elixir: "Elixir",
    excel: "Excel",
    git: "Git",
    html: "HTML",
    ios: "IOS",
    iphone: "iPhone",
    java: "Java",
    javascript: "JavaScript",
    jquery: "jQuery",
    json: "JSON",
    laravel: "Laravel",
    linux: "Linux",
    mongodb: "MongoDB",
    multithreading: "Multithreading",
    mysql: "MYSQL",
    node: "Node.js",
    objective_c: "Objective C",
    oracle: "Oracle",
    pandas: "Pandas",
    php: "PHP",
    postgresql: "Postgresql",
    python: "Python",
    r: "R",
    react: "Reactjs",
    regex: "Regex",
    ruby: "Ruby",
    rails: "Ruby On Rails",
    spring: "Spring",
    sql: "SQL",
    sql_server: "SQL Server",
    string: "String",
    swift: "Swift",
    vb_dotnet: "VB.NET",
    vba: "VBA",
    vim: "vim",
    windows: "Windows",
    wordpress: "Wordpress",
    wpf: "WPF",
    xcode: "Xcode",
    xml: "XML"
  }

  use EctoEnum, Enum.map(@tags, fn {k, _} -> {k, Atom.to_string(k)} end)

  def label!(tag), do: Map.fetch!(@tags, tag)
end
